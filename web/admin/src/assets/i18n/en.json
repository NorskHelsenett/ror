{
  "app": {
    "title": "ROR",
    "owner": "NHN"
  },
  "common": {
    "refresh": "Refresh",
    "ok": "Ok",
    "no": "No",
    "yes": "Yes",
    "cancel": "Cancel",
    "fetching": "Loading ...",
    "edit": "Edit",
    "create": "Create",
    "save": "Save",
    "delete": "Delete",
    "close": "Close",
    "unknown": "Unknown",
    "readMore": "Read more",
    "copy": "Copy",
    "error": "Error",
    "errorLoading": "Error while loading ...",
    "created": "Created",
    "updated": "Updated",
    "update": "Update",
    "settings": "Settings",
    "menu": "Menu",
    "dashboard": "Dashboard",
    "theme": "Theme",
    "light": "Light",
    "dark": "Dark",
    "madeWith": "Made with",
    "viewOnGit": "View on Helsegitlab",
    "tryAgain": "Try again",
    "from": "From",
    "to": "To",
    "pageSize": "Page size",
    "count": "Count",
    "reset": "Reset",
    "price": "Price",
    "priceEst": "All prices are estimates",
    "show": "Show",
    "hide": "Hide",
    "fullscreen": "Fullscreen",
    "columns": "Columns",
    "selected": "Selected",
    "choose": "Choose",
    "showing": "Showing",
    "of": "Of",
    "entries": "Entries",
    "missing": "Missing",
    "required": "Required",
    "export": "Export",
    "emptyList": "Empty list",
    "any": "Any",
    "copied": "Copied",
    "createdBy": "Created by",
    "metadata": "Metadata",
    "next": "Next",
    "previous": "Previous",
    "environment": {
      "1": "Development",
      "2": "Test",
      "3": "Quality assurance",
      "4": "Production"
    },
    "provider": {
      "tanzu": "Privat sky",
      "aks": "Azure",
      "k3d": "K3d",
      "kind": "Kind",
      "gke": "Google",
      "eks": "Amazon",
      "minikube": "Minikube",
      "openshift": "OpenShift",
      "rancher": "Rancher",
      "k3s": "K3s",
      "talos": "Talos"
    },
    "search": "Search",
    "typeInstead": "Type instead",
    "details": "Details",
    "plural": "s",
    "table": {
      "empty": "Empty list",
      "columnsSelected": "columns selected",
      "chooseColumns": "Choose columns",
      "noColumns": "No columns available",
      "noColumnsFilter": "No columns"
    },
    "dropdown": {
      "placeholder": "Pick one",
      "search": "Search",
      "noResults": "No results found"
    },
    "areyousure": "Are you sure?",
    "availableCriticalities": {
      "0": "Unknown",
      "1": "1. Normal",
      "2": "2. Moderat",
      "3": "3. High",
      "4": "4. Critical"
    },
    "availableSensitivities": {
      "0": "Unknown",
      "1": "1. Open",
      "2": "2. Internal",
      "3": "3. Protected",
      "4": "4. Highly protected"
    },
    "loadMore": "Load more",
    "critical": "Critical",
    "high": "High",
    "medium": "Medium",
    "low": "Low",
    "summary": "Summary",
    "report": "Report",
    "change": "Change"
  },
  "error": {
    "forbidden": "Forbidden area",
    "notfound": "Did not find what you were looking for ...",
    "servererror": "An unexpected error occured ...",
    "unauthorized": "Unauthorized",
    "logged": "Your attempt is logged",
    "frontpage": "Navigate to the front page"
  },
  "layout": {
    "search": {
      "placeholder": "Search ..."
    },
    "userFetchError": "Not able to fetch user"
  },
  "nav": {
    "home": "Overview",
    "acl": "Access control list",
    "apikeys": "Api keys",
    "configuration": "Configuration",
    "datacenters": "Data centers",
    "workspaces": "Workspaces",
    "clusters": "Clusters",
    "projects": "Projects",
    "nodes": "Nodes",
    "help": "Help",
    "search": "Search",
    "profile": "User profile",
    "logout": "Logout",
    "language": "Language",
    "metricsMenu": "Statistics",
    "adminMenu": "Administration",
    "metrics": "Metrics",
    "pricesMenu": "Economy",
    "prices": "Price list",
    "doc": "Documentation",
    "about": "About",
    "auditlogs": "Audit logs",
    "policyreports": "Policy reports",
    "vulnerabilityreports": "Vulnerability reports",
    "releasenotes": "Release notes",
    "compliancereports": "Compliance reports",
    "orders": "Orders",
    "resources": "Resources",
    "resourcesv2": "Resources"
  },
  "pages": {
    "about": {
      "title": "About Ror",
      "versions": "Versions",
      "shoutouts": "Shoutouts to",
      "content": "ROR (Release-Operate-Report) is a metadata aggregator and configuration management interface to manage multiple clusters over multiple datacenters and/or clouds.",
      "health": {
        "title": "Health",
        "table": {
          "column": {
            "service": "Service",
            "status": "Status"
          },
          "row": {
            "identityProvider": "Identity provider",
            "database": "Database",
            "messageBus": "Message Bus",
            "secrets": "Secrets",
            "tracing": "Tracing",
            "redis": "Cache"
          }
        },
        "status": {
          "1": "OK",
          "-1": "Unable to connect to service",
          "-2": "An unexpected error occured, please try again later"
        }
      }
    },
    "acl": {
      "title": "Access control list",
      "table": {
        "columns": {
          "group": "Group",
          "scope": "Scope",
          "subject": "Subject",
          "access": {
            "read": "Read",
            "create": "Create",
            "update": "Update",
            "delete": "Delete",
            "owner": "Owner"
          },
          "kubernetes": {
            "logon": "Logon"
          }
        }
      },
      "create": {
        "title": "Create permission",
        "success": "Successfully created permission for group: {{group}}",
        "error": "Error when creating permission",
        "groupPlaceholder": "Pick or type in group",
        "scopePlaceholder": "Pick a scope",
        "subjectPlaceholder": "Pick or type in subject",
        "yourGroups": "Your groups",
        "groups": "Other groups"
      },
      "update": {
        "title": "Update permission",
        "error": "Error when updating permission",
        "success": "Permission updated successfully"
      },
      "delete": {
        "title": "Delete permission?",
        "details": "Sure you want to delete permission: {{name}}?",
        "errortitle": "Error deleting",
        "errordetails": "Error deleting permission",
        "success": "Permission deleted successfully"
      },
      "form": {
        "group": "Group",
        "groupError": "Invalid group input, missing or invalid characters",
        "groupHelp": "Which group (AD/Ldap, with @<domain>)?",
        "scope": "Scope",
        "scopeError": "Invalid scope input, missing or invalid characters",
        "scopeHelp": "Which scope?",
        "subject": "Subject",
        "subjectError": "Invalid subject input, missing or invalid characters",
        "subjectHelp": "Which subject?",
        "read": "Read",
        "readError": "Invalid input",
        "readHelp": "Allow read access?",
        "create": "Write",
        "createError": "Invalid input",
        "createHelp": "Allow write access?",
        "update": "Update",
        "updateError": "Invalid input",
        "updateHelp": "Allow update access?",
        "delete": "Delete",
        "deleteError": "Invalid input",
        "deleteHelp": "Allow delete access?",
        "owner": "Owner",
        "ownerError": "Invalid input",
        "ownerHelp": "Allow owner access?",
        "logon": "Cluster logon",
        "logonError": "Invalid input",
        "logonHelp": "Allow cluster logon?"
      }
    },
    "admin": {
      "datacenters": {
        "table": {
          "columns": {
            "name": "Name",
            "provider": "Provider",
            "region": "Region",
            "country": "Country"
          }
        },
        "create": {
          "title": "Create a data center",
          "createError": "Could not create new data center ..."
        },
        "edit": {
          "title": "Rediger datacenter",
          "editError": "Could not uodate data center ..."
        },
        "form": {
          "name": "Name",
          "namePlaceholder": "Name of the datacenter",
          "nameHelp": "Enter name of the datacenter",
          "nameError": "Missing data center name",
          "provider": "Provider",
          "providerPlaceholder": "Which provider? (ex: tanzu, azure)",
          "providerHelp": "Which provider is this? (ex: tanzu, azure)",
          "providerError": "Missing provider",
          "region": "Region",
          "regionPlaceholder": "Which region? (ex: Trøndelag, Northern Ireland)",
          "regionHelp": "Which region? (ex: Trøndelag, Northern Ireland)",
          "regionError": "Missing region",
          "country": "Country",
          "countryPlaceholder": "Which country, Norway, Ireland",
          "countryHelp": "Which country is this? (Norway, Ireland)",
          "countryError": "Missing country",
          "apiEndpoint": "Data center url",
          "apiEndpointPlaceholder": "Which url thoesto this datacenter",
          "apiEndpointHelp": "Which url to login for this datacenter",
          "apiEndpointError": "",
          "required": "Required"
        }
      },
      "prices": {
        "table": {
          "column": {
            "machineClass": "Machine class",
            "price": "Price pr node",
            "cpu": "CPU",
            "memory": "Memory",
            "memoryRounded": "Memory rounded",
            "provider": "Provider"
          },
          "empty": "No prices ..."
        },
        "create": {
          "title": "Create a price",
          "createError": "Could not create new price ..."
        },
        "edit": {
          "title": "Edit a price",
          "createError": "Could not update price ..."
        },
        "form": {
          "provider": "Provider",
          "providerPlaceholder": "Fill in a provider",
          "providerHelp": "Fill in a provider",
          "providerError": "Missing provider",
          "machineClass": "Machine class",
          "machineClassPlaceholder": "Fill in a machine class",
          "machineClassHelp": "Fill in a machine class",
          "machineClassError": "Missing machine class",
          "cpu": "CPU",
          "cpuPlaceholder": "Fill in number of CPUs",
          "cpuHelp": "Fill in number of CPUs",
          "cpuError": "Missing CPU",
          "memoryBytes": "Memory bytes",
          "memoryBytesPlaceholder": "Fill in memory bytes",
          "memoryBytesHelp": "Fill in memory bytes",
          "memoryBytesError": "Missing memory bytes",
          "memory": "Memory",
          "memoryPlaceholder": "Fill in memory",
          "memoryHelp": "Fill in memory",
          "memoryError": "Missing memory",
          "price": "Price pr node",
          "pricePlaceholder": "Fill in price pr node",
          "priceHelp": "Fill in price",
          "priceError": "Missing price",
          "from": "From date",
          "fromPlaceholder": "",
          "fromHelp": "Fill in from date",
          "fromError": "Missing from date",
          "to": "To date",
          "toPlaceholder": "",
          "toHelp": "Fill in to date",
          "torror": "Missing to date",
          "required": "Required"
        }
      },
      "auditlogs": {
        "page": {
          "showing": "Showing",
          "to": "to",
          "of": "of",
          "entries": "entries"
        },
        "search": {
          "placeholder": "Search for audit logs"
        },
        "view": {
          "back": "Go back",
          "new": {
            "title": "New value"
          },
          "old": {
            "title": "Old value"
          }
        },
        "table": {
          "column": {
            "user": "User",
            "message": "Message",
            "date": "Date",
            "time": "Time",
            "action": "Action",
            "category": "Category",
            "newValue": "New value",
            "oldValue": "Old value",
            "details": "View details"
          }
        },
        "title": "Audit logs"
      },
      "projects": {
        "title": "Projects",
        "details": {
          "title": "Project",
          "name": "Name",
          "description": "Description",
          "workorder": "Work order",
          "roles": "Roles",
          "status": "Status",
          "active": "Active",
          "inactive": "Inactive",
          "servicetags": "Service tags",
          "clusterInfo": "Clusters that are connected to this project",
          "table": {
            "clusterName": "Cluster name",
            "description": "Description",
            "workorder": "Work order",
            "environment": "Environment",
            "empty": "No clusters connected"
          }
        },
        "table": {
          "name": "Name",
          "description": "Description",
          "active": "Active",
          "created": "Created",
          "updated": "Updated",
          "owner": {
            "title": "Owner",
            "upn": "User principal name",
            "email": "Email"
          },
          "responsible": {
            "title": "Responsible",
            "name": "Name",
            "email": "Email"
          },
          "billing": {
            "title": "Billing",
            "workorder": "Workorder"
          }
        },
        "create": {
          "title": "Create new project",
          "createError": "Could not create new project..."
        },
        "update": {
          "title": "Update project",
          "updateError": "Could not update project..."
        },
        "delete": {
          "title": "Delete project?",
          "details": "Sure you want to delete project {{projectName}}?",
          "success": {
            "title": "Success"
          },
          "error": {
            "title": "Error deleting project, or in use",
            "details": "Could not delete project, sure project is not in use?"
          }
        },
        "form": {
          "fetcherror": "Not able to fetch project",
          "name": "Name",
          "nameError": "Name is missing or invalid characters",
          "nameHelp": "Enter the name of the project",
          "description": "Description",
          "descriptionHelp": "Enter a description",
          "descriptionError": "Description is missing",
          "active": "Status",
          "activeHelp": "Toggle the active status of the project",
          "activeStatus": {
            "true": "Active",
            "false": "Inactive"
          },
          "workorder": "Work order",
          "workorderHelp": "Fill in the work order",
          "workorderError": "Missing work order",
          "rolesHelp": "Two roles must be added, one for owner and one for responsible",
          "rolesError": "Missing roles, minimum 2 roles required, owner and responsible",
          "roles": {
            "title": "Roles",
            "add": "Add role",
            "remove": "Remove role",
            "roleName": "Role",
            "upn": "Username (UPN)",
            "upnError": "Missing username (UPN)",
            "email": "Email",
            "emailError": "Email missing or is not valid",
            "phone": "Phone",
            "placeholder": "Velg en rolle",
            "availableRoles": {
              "owner": "Owner",
              "responsible": "Responsible"
            }
          },
          "serviceTags": "Service tags",
          "serviceTagsHelp": "Additional tags for project?",
          "serviceTagsError": "Missing service tags",
          "createError": "Error when trying to create, please look over inputs",
          "updateError": "Error when trying to update, please look over inputs"
        }
      },
      "policyreports": {
        "title": "Policy reports",
        "cluster": "Cluster",
        "policy": "Policy",
        "fail": "Fail",
        "pass": "Pass",
        "error": "Error when fetching summary from API"
      },
      "vulnerabilityreports": {
        "title": "Vulnerability reports",
        "clusterSummary": {
          "title": "Summary per cluster",
          "clusterId": "Cluster",
          "criticalCount": "Critical",
          "highCount": "High",
          "mediumCount": "Medium",
          "lowCount": "Low",
          "error": "Error when fetching summary",
          "environment": "Environment",
          "project.name": "Project"
        },
        "cveid": {
          "title": "Search by ID",
          "clusterId": "Cluster",
          "environment": "Environment",
          "criticality": "Criticality",
          "sensitivity": "Sensitivity",
          "project.name": "Project",
          "searchHelp": "Search for clusters with a specific CVE ID",
          "error": "Error when fetching by id",
          "notfound": "No results for CVE-ID search"
        }
      },
      "compliancereports": {
        "cluster": "Cluster",
        "name": "Name",
        "title": "Title",
        "passcount": "Passed",
        "failcount": "Failed"
      }
    },
    "apikeys": {
      "title": "Api keys",
      "table": {
        "columns": {
          "displayName": "Display name",
          "identifier": "Identifier",
          "created": "Created",
          "expires": "Expires",
          "lastUsed": "Last used",
          "type": "Type"
        }
      },
      "error": "Could not fetch api keys",
      "delete": {
        "title": "Delete api key?",
        "details": "Sure you want to delete api key: {{name}}?",
        "errortitle": "Error deleting",
        "errordetails": "Error deleting api key",
        "success": "Api key deleted successfully"
      },
      "create": {
        "title": "Create api key",
        "apikeydoc": {
          "title": "Now what?!",
          "first": "First of all, copy the api key to a secret location, share only with people and systems you trust!",
          "usePart1": "To use api key, add a request header called",
          "usePart2": ", and set the api key as value",
          "swaggerText1": "Which endpoints to use you say? Go to",
          "swaggerlinkText": "Swagger documentation",
          "swaggerText2": "for more information."
        },
        "types": {
          "service": "Service"
        },
        "displayName": "Display name",
        "displayNameError": "Invalid frendly name, minimum 5 characters, and just characters, numbers and whitespace",
        "displayNameHelp": "Friendly name for the api key",
        "identifier": "Identifier",
        "identifierError": "Invalid identitifer, minimum 5 characters, and just characters, numbers and whitespace",
        "identifierHelp": "Identifier for the api key",
        "type": "Type",
        "typeError": "Missing type",
        "typePlaceholder": "Choose a type",
        "expires": "Expire date",
        "expiresHelp": "Set a expire date?",
        "expiresError": "Missing value",
        "createError": "Error on create! Already exist? Invalid characters",
        "copyApikey": "Copy Api key",
        "apikeyCopied": "Api key copied",
        "apikeyHeaderCopied": "Api key header copied",
        "startOver": "Create a new api key"
      }
    },
    "auth": {
      "callback": {
        "title": "You are logged in",
        "link": "Go to first page"
      }
    },
    "configuration": {
      "title": "Configuration",
      "operatorconfigs": {
        "title": "Operator configs",
        "error": "Unable to fetch operator configs",
        "table": {
          "columns": {
            "imagePostfix": "Image post fix"
          },
          "table": {
            "columns": {
              "index": "Order",
              "taskName": "Task name",
              "version": "Version",
              "runOnce": "Run once"
            }
          }
        }
      },
      "tasks": {
        "title": "Tasks",
        "error": "Unable to fetch tasks",
        "table": {
          "columns": {
            "name": "Task name",
            "imageName": "Image name (postfix)",
            "version": "Version",
            "cmd": "Command",
            "backofflimit": "Retry limit",
            "timeoutInSeconds": "Time out (in seconds)",
            "secret": {
              "title": "Secret",
              "filepath": "File path in pod",
              "source": {
                "title": "Secret source",
                "git": "Git",
                "vault": "Vault",
                "url": "Repository url",
                "branch": "Branch",
                "contentPath": "Content path"
              }
            },
            "envVars": {
              "title": "Environment variables",
              "key": "Variable",
              "value": "Value"
            },
            "scripts": "Scripts"
          }
        }
      },
      "desiredVersion": {
        "title": "Desired version",
        "error": "Unable to fetch desired versions",
        "table": {
          "columns": {
            "key": "Key",
            "value": "Value"
          }
        },
        "form": {
          "key": "Key",
          "keyHelp": "Desired version key?",
          "keyError": "Invalid input, missing or invalid characters",
          "value": "Value",
          "valueHelp": "Desired version value?",
          "valueError": "Invalid input, missing or invalid characters"
        },
        "create": {
          "title": "Create desired version",
          "success": "Desired version created successfully",
          "error": "Error when creating desired version"
        },
        "update": {
          "title": "Update desired version",
          "success": "Desired version updated successfully",
          "error": "Error when updating desired version"
        },
        "delete": {
          "title": "Delete desired version?",
          "details": "Sure you want to delete desired version: {{key}}?",
          "success": "Desired version deleted successfully",
          "error": "Error when deleting desired version",
          "errortitle": "Error deleting",
          "errordetails": "Error when deleting desired version"
        }
      }
    },
    "clusters": {
      "title": "Clusters",
      "search": {
        "placeholder": "Search freely by clustername",
        "info": "No clusters found"
      },
      "create": "Create cluster",
      "details": {
        "title": "Cluster details",
        "raw": "Raw data",
        "conditions": {
          "toolingAutosyncError": "Missing NHN-tooling autosync, updates may not be applied",
          "argocdautosynclink": "ArgoCD documentation"
        },
        "edit": {
          "title": "Edit",
          "form": {
            "description": "Description",
            "descriptionHelp": "Enter the description of the cluster",
            "descriptionError": "Invalid characters (valid: norwegian characters, integers and -_)",
            "project": "Project",
            "projectHelp": "Which project those this cluster belong to?",
            "projectError": "Project missing",
            "criticalityLevel": "Criticality level",
            "criticalityLevelHelp": "Which criticality does this cluster have?",
            "criticalityLevelError": "Missing criticality level",
            "availableCriticalities": {
              "1": "1. Normal",
              "2": "2. Moderat",
              "3": "3. High",
              "4": "4. Critical"
            },
            "sensitivityLevel": "Sensitivity level",
            "sensitivityLevelHelp": "Which sensitivity does this cluster have?",
            "sensitivityLevelError": "Missing sensitivity level",
            "availableSensitivities": {
              "1": "1. Open",
              "2": "2. Internal",
              "3": "3. Protected",
              "4": "4. Highly protected"
            },
            "moreInfo": "More information, click here",
            "serviceTags": "Service tags",
            "serviceTagsHelp": "Additional tags for cluster?",
            "serviceTagsError": "Missing service tags",
            "workorder": "Work order",
            "workorderHelp": "Fill in work order",
            "workorderError": "Missing required work order or invalid characters (valid: norwegian characters and -_)",
            "copyProject": {
              "title": "Overwrite?",
              "details": "Overwrite data from {{projectName}}?",
              "accept": "Overwritten data from project",
              "canceled": "Canceled",
              "reject": "No overwriting from project"
            }
          }
        },
        "delete": {
          "title": "Delete cluster",
          "subTitle": "Danger zone",
          "maintext": "Are you sure you want to delete cluster?",
          "subtext": "This will delete all data related to this cluster, and cannot be undone!",
          "sub2text": "To be able to delete cluster, you must create a namespace named 'delete-me' in the cluster, and then click the button below."
        },
        "resources": {
          "title": "Resources"
        },
        "acl": {
          "title": "Access groups",
          "table": {
            "columns": {
              "groupName": "Group name"
            }
          }
        },
        "metadata": {
          "title": "Metadata",
          "name": "Display name",
          "clusterName": "Cluster name",
          "clusterId": "Cluster id",
          "status": "Status",
          "statusTooltip": "Time since last heartbeat, all under 10 minutes is good, between 10 and 15 is smelly, over 20 minutes is bad",
          "datacenter": "Datacenter",
          "provider": "Provider",
          "platform": "Platform",
          "workspace": "Workspace",
          "updated": "Updated",
          "created": "Created",
          "lastObserved": "Last observed",
          "firstObserved": "First observed",
          "accessGroups": "Access groups",
          "ha": "HA control plane",
          "environment": "Environment",
          "k8sVersion": "Kubernetes version",
          "nhnToolingVersion": "NHN-tooling version",
          "nhnToolingBranch": "NHN-tooling branch",
          "agent": "Agent version",
          "agentSha": "Agent sha",
          "controlPlaneEndpoint": "Control plane endpoint",
          "egressIp": "Egress IP",
          "clusterIdCopied": "Cluster id copied",
          "egressIpCopied": "Egress IP copied",
          "project": "Project",
          "criticality": "Criticality",
          "sensitivity": "Sensitivity",
          "roles": "Roles",
          "tags": "Service tags",
          "workorder": "Work order",
          "description": "Description",
          "upn": "Username (UPN)",
          "email": "Email",
          "phone": "Phone"
        },
        "tools": {
          "title": "Tools",
          "argo": "ArgoCD",
          "argoMissing": "No argocd ingress",
          "grafana": "Grafana",
          "grafanaMissing": "No grafana ingress",
          "kubectlLogin": "Kubectl login",
          "kubectlLoginCopied": "Kubectl login command copied",
          "rorlogin": "ROR CLI login",
          "rorlogincopied": "ROR CLI login command copied"
        },
        "metrics": {
          "cpu": "CPU",
          "cpuConsumed": "CPU consumed",
          "memory": "Memory",
          "memoryConsumed": "Memory consumed",
          "priceMonth": "Price per month",
          "priceYear": "per year",
          "nodePool": "Node pool"
        },
        "nodePools": {
          "title": "Node pools",
          "machineClass": "Machine class",
          "table": {
            "column": {
              "name": "Name",
              "role": "Role",
              "os": "Operation sys.",
              "osImage": "Image",
              "arch": "Architecture",
              "cpu": "CPU",
              "mem": "MEM"
            }
          }
        },
        "ingresses": {
          "title": "Ingresses",
          "statusTooltip": "Green if all requisites are in place, for example that it has an IP-address and that services are of NodePort-type.",
          "internet": "Internet",
          "health": "Helsenett",
          "datacenter": "Data center",
          "hosts": "Hosts",
          "address": "IP",
          "infrastructure": "Infrastructure",
          "namespace": "Namespace",
          "name": "Name",
          "hostname": "Hostname",
          "path": "Path",
          "ip": "IP",
          "cert": "Cert",
          "empty": "No ingresses",
          "noIngressClass": "IngressClass missing or invalid class",
          "ingressClass": "Ingress Class",
          "services": {
            "notFound": "Could not find service",
            "noEndpoints": "Service has no endpoints",
            "notNodePort": "Not a NodePort-service",
            "noService": "No service available"
          },
          "noRules": "No paths defined",
          "noips": "No assigned ip-addresses",
          "noingressrules": "No ingress rules defined",
          "detail": {
            "class": "Infrastructure",
            "status": "Ingress status"
          },
          "tabs": {
            "details": "Details",
            "annotations": "Annotations",
            "certmanager": "Certmanager",
            "raw": "Raw data"
          },
          "meta": {
            "title": "Metadata",
            "name": "Name",
            "namespace": "Namespace",
            "className": "Ingress class",
            "cluster": "Cluster",
            "provider": "Provider",
            "health": "Health",
            "errormessages": "Error messages"
          },
          "errors": {
            "noIngress": "No ingress",
            "noIngressClass": "No ingress class",
            "noService": "No service",
            "noEndpoints": "No endpoints",
            "noNodePort": "No NodePort",
            "noRules": "No rules",
            "noIP": "No IP",
            "noIngressRules": "No ingress rules",
            "service": {
              "noservice": "No service data",
              "noname": "No name",
              "noipfamiliypolicy": "No ip family policy",
              "noclusterips": "No cluster ips",
              "noipfamilies": "No ip families",
              "notype": "No service type",
              "wrongtype": "Wrong service type",
              "wrongakotype": "Wrong service type for AKO (Missing NodePort)"
            },
            "endpoints": {
              "noendpoint": "No endpoints",
              "nosubsets": "No pods connected to service",
              "noaddressess": "No endpoint addresses found",
              "nopods": "No pods found"
            },
            "pods": {
              "nopods": "No pods found",
              "noname": "No pod name",
              "noorwrongphase": "No running phase",
              "nophase": "No running phase"
            },
            "ingress": {
              "noingress": "No ingress",
              "noingressname": "Missing ingress name",
              "noingressclassname": "Missing ingress class name",
              "nobackendportnameornumber": "Missing backend port name or number",
              "norules": "No ingress rules",
              "nopaths": "No paths",
              "nopath": "No path",
              "noPathType": "No path type",
              "wrongPathTupe": "Wrong path type"
            }
          },
          "certmanager": {
            "columns": {
              "name": "Name",
              "namespace": "Namespace",
              "notvalidbefore": "Not valid before",
              "notvalidafter": "Not valid after",
              "renewaltime": "Renewal time",
              "lasttransitiontime": "Last transition time",
              "message": "Message",
              "reason": "Reason",
              "status": "Status",
              "type": "Type"
            }
          },
          "raw": {
            "ingress": "Ingress",
            "certificates": "Certificates",
            "services": "Services",
            "endpoints": "Endpoints",
            "pods": "Pods"
          }
        },
        "ingress": {
          "title": "Ingress",
          "cluster": "Cluster",
          "ingresses": "Ingresses",
          "annotations": "Annotations"
        },
        "policyreports": {
          "title": "Policy reports",
          "namespace": "Namespace",
          "name": "Name",
          "error": "Error",
          "fail": "Failed",
          "pass": "Passed",
          "skip": "Skipped",
          "warn": "Warning",
          "result": "Result",
          "policy": "Policy",
          "apiversion": "API version",
          "kind": "Kind",
          "category": "Category",
          "severity": "Severity",
          "results": {
            "category": "Category",
            "message": "Message",
            "name": "Name",
            "uid": "Kubernetes UID"
          }
        },
        "vulnerabilityreports": {
          "title": "Vulnerability reports",
          "name": "Name",
          "kind": "Kind",
          "namespace": "Namespace",
          "criticalCount": "Critical count",
          "critical": "Critical",
          "high": "High",
          "medium": "Medium",
          "low": "Low",
          "unknown": "Unknown",
          "total": "Total",
          "reportTitle": "Title",
          "severity": "Severity",
          "score": "Score",
          "id": "Id",
          "primaryLink": "Link",
          "resource": "Resource",
          "installedVersion": "Installed version",
          "fixedVersion": "Fixed version",
          "description": "Description",
          "artifactRepository": "Repository",
          "artifactTag": "Tag"
        },
        "compliancereports": {
          "title": "Compliance reports",
          "table": {
            "name": "Name",
            "title": "Title",
            "passcount": "Passed",
            "failcount": "Falled",
            "details": {
              "id": "Id",
              "name": "Name",
              "severity": "Severity",
              "totalfail": "Failed"
            }
          }
        },
        "notifications": {
          "title": "Notifications",
          "receivers": "Receivers",
          "slack": "Slack",
          "channelid": "ChannelId",
          "notificationkind": "Resource to receive notifications about",
          "addSlackChannel": "Add slack channel",
          "removeSlackChannel": "Remove slack channel",
          "route": {
            "configure": "Configure notifications",
            "delete": "Delete all",
            "resource": "Resource",
            "slack": {
              "workspace": "Workspace",
              "channel": "Channel"
            }
          },
          "routeCreate": {
            "slack": "Add new slack receiver"
          },
          "type": "Type",
          "channelId": "ChannelId"
        }
      },
      "table": {
        "column": {
          "status": "Status",
          "name": "Name",
          "clusterName": "Cluster name",
          "projectName": "Project name",
          "workspace": "Workspace",
          "datacenter": "Datacenter",
          "updated": "Last heartbeat",
          "lastObserved": "Last heartbeat",
          "firstObserved": "First heartbeat",
          "created": "Created",
          "cpu": "CPU",
          "memory": "Memory",
          "cpuConsumed": "CPU consumed",
          "memoryConsumed": "Memory consumed",
          "nodePools": "Node pools",
          "nodes": "Nodes",
          "priceMonth": "Price pr month",
          "priceYear": "Price pr year",
          "cores": "cores",
          "nhnTooling": "Tooling",
          "nhnToolingBranch": "Branch",
          "k8sVersion": "Kubernetes",
          "agentVersion": "Agent",
          "ingressesDatacenter": "Datacenter publications",
          "ingressesHealth": "Helsenett publications",
          "ingressesInternet": "Internet publications",
          "egressIP": "Egress IP",
          "provider": "",
          "environment": "Environment",
          "workorder": "Work order"
        },
        "empty": "No clusters"
      },
      "paginator": {
        "total": "Total count"
      },
      "new": {
        "title": "Create cluster",
        "clusterDetails": "Cluster details",
        "form": {
          "provider": "Provider",
          "providerPlaceholder": "Select a provider",
          "providerError": "Missing provider selection",
          "env": "Environment",
          "envPlaceholder": "Select a environment",
          "envError": "Missing environment",
          "datacenter": "Data center",
          "datacenterPlaceholder": "Select a data center",
          "datacenterError": "Missing data center",
          "workspace": "Workspace",
          "workspacePlaceholder": "Select a workspace",
          "workspaceError": "Missing workspace",
          "clusterName": "Cluster-navn",
          "clusterNameError": "Invalid name, or not unique",
          "tags": "Tags",
          "tagsError": "Missing tags",
          "nodePools": {
            "title": "Node pools",
            "machineClass": "Machine class",
            "cpu": "CPU",
            "mem": "MEM",
            "pricePrNode": "Price pr node",
            "count": "Count"
          },
          "addedNodePools": {
            "title": "Added node pools",
            "sum": "Sum"
          },
          "summary": {
            "title": "Summary",
            "orderedBy": "Ordered by",
            "clusterName": "Cluster name",
            "pricePrMonth": "Estimated price per month",
            "pricePrYear": "Estimated price per year"
          }
        }
      },
      "created": "Cluster created"
    },
    "clustervulnerabilityreport": {
      "id": "Id",
      "severity": "Severity",
      "score": "Score",
      "title": "Title",
      "firstObserved": "First observed",
      "lastObserved": "Last observed",
      "link": "Link",
      "status": "Status",
      "dismissalReason": "Dismissal reason",
      "emptyTable": "No vulnerabilities found",
      "vulnerabilities": "Vulnerabilities",
      "namespace": "Namespace",
      "repository": "Repository",
      "tag": "Tag",
      "resource": "Resource",
      "installedVersion": "Installed version",
      "fixedVersion": "Fixed version",
      "statusHelp": "Choose vulnerability status",
      "dismissalReasonHelp": "Choose reason for dismissal",
      "riskAssesment": "Risk assesment",
      "riskAssesmentHelp": "Link to risk assesment",
      "comment": "Comment",
      "commentHelp": "Additional comment",
      "columns": "Columns",
      "columnsHelp": "Choose columns in table",
      "notAssessed": "Not assessed",
      "needsTriage": "Needs triage",
      "confirmed": "Confirmed",
      "dismissed": "Dismissed",
      "idHelp": "Filter by id",
      "acceptableRisk": "Acceptable risk",
      "falsePositive": "False positive",
      "notApplicable": "Not applicable"
    },
    "create": {
      "cluster": {
        "steps": {
          "metadata": {
            "title": "Metadata",
            "project": "Project",
            "projectPlaceholder": "Choose a project",
            "projectError": "Missing project",
            "projectHelp": "If you cannot find your project, you can request a new one at this slack channel:",
            "env": "Environment",
            "envPlaceholder": "Choose environment",
            "envError": "Missing environment",
            "clustername": "Cluster name",
            "clusternameError": "Missing cluster name",
            "tags": "Tags",
            "tagsError": "Missing tags",
            "sensitivity": "Sensitivity",
            "sensitivityPlaceholder": "Choose sensitivity",
            "sensitivityError": "Missing sensitivity",
            "criticality": "Criticality",
            "criticalityPlaceholder": "Choose criticality",
            "criticalityError": "Missing criticality"
          },
          "location": {
            "title": "New cluster",
            "provider": "Provider",
            "providerPlaceholder": "Choose a provider",
            "providerError": "Missing provider",
            "workspace": "Workspace",
            "workspacePlaceholder": "Choose a workspace",
            "workspaceError": "Missing workspace",
            "workspaceHelp": "If you cannot find relevant workspace, you can request a new one at this slack channel:",
            "ownergroup": "Owner group",
            "ownergroupPlaceholder": "Choose owner group",
            "ownergroupError": "Missing owner group, or is not a vaild group name (ex: <group-name>@<domain>.<postfix>)",
            "region": "Region",
            "regionPlaceholder": "Choose region",
            "regionError": "Missing region",
            "subscription": "Subscription",
            "subscriptionPlaceholder": "Choose subscription",
            "subscriptionError": "Missing subscription",
            "resourceGroup": "ResourceGroup",
            "resourceGroupPlaceholder": "Choose resourceGroup",
            "resourceGroupError": "Missing resourceGroup"
          },
          "resources": {
            "title": "Resources",
            "table": {
              "machineClass": "Machine class",
              "cpu": "CPU",
              "memory": "MEM",
              "price": "Price pr node",
              "count": "Count"
            },
            "selectedTitle": "Added node pools",
            "sum": "Sum",
            "availability": "Availability",
            "availabilityError": "Missing availability",
            "lowAvailability": "Normal availability",
            "highAvailability": "High availability",
            "availabilityWarning": "Creating a cluster without high availability in production, is not recommended!",
            "price": "Price",
            "k8sVersion": "Kubernetes version",
            "k8sVersionPlaceholder": "Select kubernetes version",
            "k8sVersionError": "Missing kubernetes version",
            "clusterName": "Cluster name",
            "clusterNameError": "Invalid name, just use characters, numbers and -_"
          },
          "summary": {
            "title": "Summary",
            "orderby": "Order by",
            "project": "Project",
            "workorder": "Workorder",
            "env": "Environment",
            "clustername": "Cluster name",
            "tags": "Tags",
            "sensiticity": "Sensitivity",
            "criticality": "Criticality",
            "provider": "Provider",
            "workspace": "Workspace",
            "datacenter": "Datacenter",
            "location": "Location",
            "ownergroup": "Owner group",
            "availability": "Availability",
            "nodepools": "Node pools",
            "sumMonth": "Sum pr. month",
            "sumYear": "Sum pr. year",
            "errorSubmit": "Error when creating cluster",
            "serverMessage": "Server message",
            "submitSuccess": "Cluster created successfully",
            "region": "Region",
            "subscription": "Subscription",
            "resourceGroup": "Resource group",
            "k8sVersion": "Kubernetes version"
          }
        },
        "summary": "Summary"
      }
    },
    "dashboard": {
      "title": "Dashboard",
      "error": "Error when fetching metrics ...",
      "seeAll": "See all",
      "metrics": {
        "cpu": "CPU",
        "memory": "Memory",
        "cores": "cores"
      },
      "rates": {
        "clusterInDatacenters": "Clusters in datacenters",
        "clusterInWorkspaces": "Clusters in workspaces"
      },
      "emptyDatacenters": "No data centers ...",
      "emptyWorkspaces": "No workspaces ...",
      "emptyClusters": "No clusters ...",
      "total": "total",
      "orders": {
        "title": "Orders",
        "table": {
          "name": "Name",
          "provider": "Provider",
          "environment": "Environment",
          "phase": "Phase",
          "timeSince": "Time since",
          "status": "Status"
        },
        "phases": {
          "Recieved": "Recieved",
          "Creating": "Creating",
          "Error": "Error",
          "Done": "Done"
        },
        "statuses": {
          "": "...",
          "Provisioning": "Provisioning",
          "Accepted": "Accepted"
        },
        "delete": {
          "success": "Order deleted",
          "error": "Error when deleting order",
          "title": "Delete order?",
          "details": "Sure you want to delete order?"
        }
      }
    },
    "datacenters": {
      "title": "Data centers",
      "table": {
        "column": {
          "name": "Name",
          "workspace": "Workspace",
          "datacenter": "Datacenter",
          "cluster": "Cluster",
          "cpu": "CPU",
          "provider": "Provider",
          "memory": "Mem",
          "cpuConsumed": "CPU consumed",
          "memoryConsumed": "Memory consumed",
          "nodePools": "Node pools",
          "nodes": "Nodes",
          "priceMonth": "Price pr month",
          "priceYear": "Price pr year",
          "cores": "cores"
        },
        "empty": "No data centers ..."
      },
      "details": {
        "title": "Data center"
      }
    },
    "metrics": {
      "title": "Metrics",
      "nhnTooling": "Distribution of NHN Tooling versions"
    },
    "orders": {
      "title": "Orders",
      "details": {
        "title": "Order details",
        "errorFetch": "Error when fetching order",
        "table": {
          "provider": "Provider",
          "clustername": "Cluster name",
          "datacentername": "Datacenter name",
          "workspacename": "Workspace name",
          "orderby": "Order by",
          "ownergroup": "Owner group",
          "availability": "High availability",
          "status": "Status",
          "phase": "Phase",
          "created": "Created",
          "updated": "Updated",
          "lastobserved": "Last observed"
        }
      }
    },
    "prices": {
      "title": "Price list per month",
      "table": {
        "column": {
          "machineClass": "Machine class",
          "price": "Price pr node",
          "cpu": "CPU",
          "memory": "Memory",
          "memoryRounded": "Memory rounded",
          "provider": "Provider"
        },
        "empty": "No prices ..."
      }
    },
    "profile": {
      "title": "User profile",
      "description": "Description",
      "name": "Name",
      "email": "Email",
      "groups": "Groups",
      "accessToken": "Access token",
      "aud": "Audience",
      "iss": "Issuer",
      "exp": "Expires",
      "iat": "Issued",
      "copyWith": "Copy with 'Bearer'",
      "details": {
        "title": "Details"
      },
      "raw": {
        "title": "Raw data"
      },
      "apikeys": {
        "title": "Api keys",
        "create": {
          "title": "Create api key",
          "displayName": "Display name",
          "displayNameHelp": "Friendly name for the api key",
          "displayNameError": "Invalid frendly name, minimum 5 characters, and just characters, numbers and whitespace",
          "readOnly": "Read only?",
          "readOnlyValues": {
            "true": "Read only",
            "false": "Read and write"
          },
          "readOnlyHelp": "Just read only permissions?",
          "readOnlyError": "Missing value",
          "expires": "Expire date",
          "expiresHelp": "Set a expire date?",
          "expiresError": "Missing value",
          "copyApikey": "Copy Api key",
          "apikeyCopied": "Api key copied",
          "apikeyHeaderCopied": "Api key header copied",
          "startOver": "Create a new api key",
          "createError": "Error on create! Already exist? Invalid characters",
          "apikeydoc": {
            "title": "Now what?!",
            "first": "First of all, copy the api key to a secret location, share only with people and systems you trust!",
            "usePart1": "To use api key, add a request header called",
            "usePart2": ", and set the api key as value",
            "swaggerText1": "Which endpoints to use you say? Go to",
            "swaggerlinkText": "Swagger documentation",
            "swaggerText2": "for more information."
          }
        }
      }
    },
    "releaseNotes": {
      "title": "Release notes",
      "changes": {
        "2023_12_13": {
          "title": "2023-12-13",
          "description": "Now possible to continue your session when right clicking on a link and open in new tab.",
          "description1": "Added release notes to ROR."
        }
      }
    },
    "resources": {
      "title": "Resources",
      "error": "Error when fetching resources",
      "table": {
        "empty": "No resources",
        "missingfilter": "Missing filter"
      },
      "details": {
        "title": "Resource",
        "raw": "Raw data"
      },
      "filter": {
        "resourceType": {
          "placeholder": "Select resource type"
        },
        "owner": {
          "placeholder": "Select scope"
        },
        "cluster": {
          "placeholder": "Select a cluster"
        }
      }
    },
    "resourcesv2": {
      "title": "Resources",
      "list": {
        "fetchCount": "Fetched {{count}} resources",
        "header": {
          "tooltip": "For multi sorting, hold down the shift on windows or ⌘ for macos key while clicking on the column headers"
        }
      }
    },
    "workspaces": {
      "title": "Workspaces",
      "details": {
        "title": "Workspace"
      },
      "table": {
        "column": {
          "name": "Name",
          "workspace": "Workspace",
          "datacenter": "Datacenter",
          "cluster": "Cluster",
          "cpu": "CPU",
          "memory": "Memory",
          "cpuConsumed": "CPU consumed",
          "memoryConsumed": "Memory consumed",
          "nodePools": "Node pools",
          "nodes": "Nodes",
          "priceMonth": "Price pr month",
          "priceYear": "Price pr year",
          "cores": "cores"
        },
        "empty": "No workspaces"
      },
      "form": {
        "project": "Project",
        "projectHelp": "Select project for the workspace"
      }
    }
  },
  "shared": {
    "export": {
      "errorSummary": "Export failed",
      "errorDetail": "No data to export"
    },
    "trueOrFalse": {
      "true": "True",
      "false": "False"
    }
  }
}
