build-operator:
  stage: buildandtest
  needs: 
  - job: bump-version
    optional: true
  retry: 2
  extends: .go-cache
  image: ncr.sky.nhn.no/dockerhub/library/golang:latest
  rules:
    - changes:
        - 'cmd/operator/**/*'
        - 'internal/**/*'
        - 'pkg/**/*'
        - 'go.mod'
    - changes:
        - 'cmd/operator/version.json'
      when: never
    - when: never
  variables:
    OPERATORPATCHVERSION: 0
  before_script:
    - apt update
    - apt install jq -y
    - go get ./...
    - go get -t ./...
    - go vet ./cmd/operator/...
    - mkdir -p dist
    - mkdir -p crds
    - cd cmd/operator
  script:
    - OPERATORPATCHVERSION=$(jq -r '.patch' version.json)
    - OPERATORPATCHVERSION=$(($OPERATORPATCHVERSION + 1))
    - jq --arg SHORTSHA "$CI_COMMIT_SHORT_SHA" --arg PATCH "$OPERATORPATCHVERSION" '.commitSha = $SHORTSHA | .patch = ($PATCH | tonumber) ' version.json > newVersion.json && mv newVersion.json version.json
    - make
    - make manifests
    - cd ../..
    - cp cmd/operator/bin/manager dist/operator
    - cp cmd/operator/config/crd/bases/ror.nhn.no_tasks.yaml crds/ror.nhn.no_tasks.yaml
    - ls -la dist/operator
    - touch cmd/operator/isbuilt
  artifacts:
    paths:
      - dist/operator
      - crds/ror.nhn.no_tasks.yaml
      - cmd/operator/version.json
      - cmd/operator/isbuilt
    expire_in: 1 hour

test-operator:
  stage: buildandtest
  retry: 2
  needs: []
  extends: .go-cache
  image: ncr.sky.nhn.no/dockerhub/library/golang:latest
  rules:
    - changes:
        - 'cmd/operator/**/*'
        - 'internal/**/*'
        - 'pkg/**/*'
        - 'go.mod'
    - when: never
  before_script:
    - go get ./...
    - go get -t ./...
    - cd cmd/operator
  script:
    - go test -cover -v ./...

image-operator:
  stage: buildandtest
  needs: 
    - test-operator
    - build-operator
  extends: .build-container-kaniko
  variables:
    DOCKERFILE_PATH: '/cmd/operator'
    CONTEXT_PATH: '${CI_PROJECT_DIR}'
    CI_APPLICATION_IMAGE: '$HARBOR_HOST/ror/ror-operator'
    CI_APPLICATION_TAG: '$CI_COMMIT_SHORT_SHA'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "develop"'
      changes:
        - 'cmd/operator/**/*'
        - 'internal/**/*'
        - 'pkg/**/*'
        - 'go.mod'
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - 'cmd/operator/**/*'
        - 'internal/**/*'
        - 'pkg/**/*'
        - 'go.mod'
    - when: never
  dependencies:
    - build-operator

gen-charts-ror-cluster-operator:
    stage: buildandtest
    dependencies:
        - build-operator
    needs:
        - job: image-operator
          optional: true
        - job: build-operator
          artifacts: true
          optional: true
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
          when: never
        - if: '$CI_COMMIT_BRANCH == "develop"'
          changes:
              - cmd/operator/**/*
              - internal/**/*
              - pkg/**/*
        - if: '$CI_COMMIT_BRANCH == "main"'
          changes:
              - cmd/operator/**/*
              - internal/**/*
              - pkg/**/*
        - if: '$CI_COMMIT_BRANCH == "agentv2"'
          changes:
              - cmd/operator/**/*
              - internal/**/*
              - pkg/**/*
        - when: never
    variables:
        CI_REPO: 'helsegitlab.nhn.no/sdi/SDI-Infrastruktur/nhn-ror.git'
    image: ncr.sky.nhn.no/nhn/ci-deploy:0.0.2
    script:
        - if test -f "cmd/operator/isbuilt"; then
        - cp crds/ror.nhn.no_tasks.yaml charts/ror-operator/templates/.
        - yq e -i '.version = strenv(ROR_VERSION),.appVersion = strenv(ROR_VERSION)' charts/ror-operator/Chart.yaml  
        - yq e -i '.image.tag = strenv(ROR_VERSION)' charts/ror-operator/values.yaml    
        - helm package charts/ror-operator
        - echo  $HARBOR_TOKEN | helm registry login -u $HARBOR_USER $HARBOR_HOST --password-stdin
        - helm push ror-operator-${ROR_VERSION}.tgz oci://${HARBOR_HOST}/ror/helm
        - fi