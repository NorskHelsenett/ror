// THIS FILE IS GENERATED, DO NOT EDIT
// ref: build/generator/main.go

package rorresources

import (
	"github.com/NorskHelsenett/ror/pkg/rorresources/rortypes"

)


// The Resource struct represents one resource in ror.
// 
// It implement common and resource specific methods by providing interfaces to the underlying resources
type Resource struct {
	rortypes.CommonResource `json:",inline" bson:",inline"`

{{ range .}}
	{{.Kind}}Resource *rortypes.Resource{{.Kind}} `json:"{{.Kind | lower}},omitempty" bson:"{{.Kind | lower}},omitempty"`{{end}}

	common     rortypes.CommonResourceInterface
}

// NewRorResource provides a empty resource of a given kind/apiversion
func NewRorResource (kind string, apiversion string) *Resource {
	r := Resource{}
	r.Kind = kind
	r.APIVersion = apiversion
	return &r
}

// SetCommonResource sets the common resource of the resource, the common resource implements common metadata of the resource
func (r *Resource) SetCommonResource(common rortypes.CommonResource) {
	r.CommonResource = common
}

// SetCommonInterface sets the common interface of the resource, the common interface implements common methods of the resource
func (r *Resource) SetCommonInterface ( common rortypes.CommonResourceInterface){
	r.common = common
}
{{ range .}}
func (r *Resource) Set{{.Kind}}(res *rortypes.Resource{{.Kind}}) {
	r.{{.Kind}}Resource = res
}
{{end}}


{{ range .}}
// {{.Kind}} is a wrapper for the underlying resource, it provides a {{.Kind}}interface to work with {{.Plural}}
func (r *Resource) {{.Kind}}() rortypes.{{.Kind}}interface {
	return r.{{.Kind}}Resource
}

{{end}}
// (r *Resource) GetRorHash() returns the hash from the common interface
func (r *Resource) GetRorHash() string {
	return r.common.GetRorHash()
}

// (r *Resource) GenRorHash() calculates the hash of the resource and set the metadata header
func (r *Resource) GenRorHash() {
	hash :=r.common.GetRorHash()
	r.CommonResource.RorMeta.Hash = hash
}

func (r *Resource) ApplyInputFilter() error {
	return r.common.ApplyInputFilter(&r.CommonResource)
}

